@page  "/Productos/ListaProductos"

@using Entities
@using Bussiness
@using DevExpress.Blazor
@using Newtonsoft.Json

@inject B_Product Product

<h3>Lista de Productos</h3>

<DxDataGrid T="ProductEntity" DataAsync="@Product.ProductList"
            @ref="MyGrid"
            KeyFieldName="Id">

    <DxDataGridCommandColumn Width="10%" ClearFilterButtonVisible="false">
        <HeaderCellTemplate>
            <a class="oi oi-plus" @onclick="@(() => ProductFocus(new ProductEntity()))" href="javascript:void(0);"></a>
        </HeaderCellTemplate>
        <CellTemplate>
            <a class="oi oi-pencil col-6" @onclick="@(() => ProductFocus(context as ProductEntity))" href="javascript:void(0);"></a>
            <a class="oi oi-x col-6" @onclick="@(() => Delete(context as ProductEntity))" href="javascript:void(0);"></a>
        </CellTemplate>
    </DxDataGridCommandColumn>

    <DxDataGridColumn Caption="Nombre" Field="@nameof(ProductEntity.Name)" />
   
    <DxDataGridColumn 
                              Field="CategoryEntity.Name"
                              Caption="Categoria"/>
</DxDataGrid>


<DxPopup HeaderText="Información del producto"
         CssClass="myPopupCss"
         @bind-Visible="@PopupVisible">
    <Content>
        <Producto product="@ProductSelected"/>
    </Content>
    <FooterTemplate>
        <button class="btn btn-primary" @onclick="@(() => SaveProduct(ProductSelected))">Guardar</button>
    </FooterTemplate>
</DxPopup>





@code {
    DxDataGrid<ProductEntity> MyGrid;
    bool PopupVisible { get; set; }
    ProductEntity ProductSelected = new ProductEntity();

    #region CRUD 

    /// <summary>
    /// This method start when is click the button Add or Update
    /// </summary>
    /// <param name="product"></param>
    void ProductFocus(ProductEntity product)
    {
        PopupVisible = true;
        ProductSelected = product;
    }

    /// <summary>
    /// This method executes when click in the save button in pup-up
    /// </summary>
    /// <param name="product"></param>
    void SaveProduct(ProductEntity product)
    {
        if (product.Id > 0)
        {
            Product.UpdateProduct(product);
        }
        else
        {
            Product.CreateProduct(product);
        }
        PopupVisible = false;
    }

    /// <summary>
    /// This method executes when click in the delete button 
    /// </summary>
    /// <param name="item"></param>
    async void Delete(ProductEntity product)
    {
        if (product != null)
        {
            await Product.DeleteProduct(product);
        }
    }

    #endregion

    #region DevExpress Functions (Waiting for solve, ticket sent)
    async void OnRowUpdating(ProductEntity dataItem, Dictionary<string, object> newValue)
    {
        string values = JsonConvert.SerializeObject(newValue);
        JsonConvert.PopulateObject(values, dataItem);
        await Product.UpdateProduct(dataItem);
    }


    async void OnRowInserting(Dictionary<string, object>
        newValue)
    {
        ProductEntity productEntitynew = new ProductEntity();
        string values = JsonConvert.SerializeObject(newValue);
        JsonConvert.PopulateObject(values, productEntitynew);
        await Product.CreateProduct(productEntitynew);
    }
    #endregion
}
