@page  "/Categories/ListaCategories"

@using Entities
@using Bussiness
@using DevExpress.Blazor
@using Newtonsoft.Json

@inject B_Category Category

<h3>Lista de Categorias</h3>

<DxDataGrid T="CategoryEntity" DataAsync="@Category.CategoryList"
            @ref="MyGrid"
            KeyFieldName="Id">

    <DxDataGridCommandColumn Width="10%" ClearFilterButtonVisible="false">
        <HeaderCellTemplate>
            <a class="oi oi-plus" @onclick="@(() => CategoryFocus(new CategoryEntity()))" href="javascript:void(0);"></a>
        </HeaderCellTemplate>
        <CellTemplate>
            <a class="oi oi-pencil col-6" @onclick="@(() => CategoryFocus(context as CategoryEntity))" href="javascript:void(0);"></a>
            <a class="oi oi-x col-6" @onclick="@(() => Delete(context as CategoryEntity))" href="javascript:void(0);"></a>
        </CellTemplate>
    </DxDataGridCommandColumn>

    <DxDataGridColumn Caption="Nombre" Field="@nameof(CategoryEntity.Name)" />
</DxDataGrid>


<DxPopup HeaderText="Información del Categoryo"
         CssClass="myPopupCss"
         @bind-Visible="@PopupVisible">
    <Content>
        <Category CategoryToSave="@CategorySelected" />
    </Content>
    <FooterTemplate>
        <button class="btn btn-primary" @onclick="@(() => SaveCategory(CategorySelected))">Guardar</button>
    </FooterTemplate>
</DxPopup>





@code {
    DxDataGrid<CategoryEntity> MyGrid;
    bool PopupVisible { get; set; }
    CategoryEntity CategorySelected = new CategoryEntity();

    #region CRUD

    /// <summary>
    /// This method start when is click the button Add or Update
    /// </summary>
    /// <param name="Category"></param>
    void CategoryFocus(CategoryEntity Category)
    {
        PopupVisible = true;
        CategorySelected = Category;
    }

    /// <summary>
    /// This method executes when click in the save button in pup-up
    /// </summary>
    /// <param name="Category"></param>
    void SaveCategory(CategoryEntity CategorySelected)
    {
        if (CategorySelected.Id > 0)
        {
            Category.UpdateCategory(CategorySelected);
        }
        else
        {
            Category.CreateCategory(CategorySelected);
        }
        PopupVisible = false;
    }

    /// <summary>
    /// This method executes when click in the delete button
    /// </summary>
    /// <param name="item"></param>
    async void Delete(CategoryEntity CategorySelected)
    {
        if (CategorySelected != null)
        {
            await Category.DeleteCategory(CategorySelected);
        }
    }

    #endregion
    }