@using Entities
@using Bussiness
@using DevExpress.Blazor
@using Newtonsoft.Json
@inject B_InputOutput InputOutputService
@inject B_Product ProductService
@inject B_WhereHouse WhereHouseService
<h3>Ventas/Ingresos</h3>

<EditForm Model="@InputOutputProp" Context="EntitiesContext">
    <DataAnnotationsValidator/>
    <DxFormLayout Data="@InputOutputProp">
        <DxFormLayoutItem Field="@nameof(InputOutputEntity.WhereHouse)" Caption="Seleccione el almacén:" ColSpanMd="6">
            <Template>
                <DxComboBox NullText="Seleccione el almacén"
                            T="WhereHouseEntity"
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                            @bind-SelectedItem="@InputOutputProp.WhereHouse"
                            Data="@whereHouses"
                            TextFieldName="@nameof(WhereHouseEntity.Name)">
                </DxComboBox>
            </Template>
        </DxFormLayoutItem>
        <DxFormLayoutItem Field="@nameof(InputOutputEntity.Product)" Caption="Seleccione el producto:" ColSpanMd="6">
            <Template>
                <DxComboBox NullText="Seleccione un producto"
                            T="ProductEntity"
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                            @bind-SelectedItem="@InputOutputProp.Product"
                            Data="@products"
                            TextFieldName="@nameof(ProductEntity.Name)">
                </DxComboBox>
            </Template>
        </DxFormLayoutItem>
        <DxFormLayoutItem Field="@nameof(InputOutputEntity.IsInput)" Caption="¿Es entrada?:" ColSpanMd="6">
            <Template>
                <DxCheckBox @bind-Checked="@InputOutputProp.IsInput" T="bool" />
            </Template>
        </DxFormLayoutItem>
        <DxFormLayoutItem Field="@nameof(InputOutputEntity.Quantity)" Caption="Cantidad:" ColSpanMd="6">
            <Template>
                <DxSpinEdit NullText="Sin información" T="int" @bind-Value="@InputOutputProp.Quantity" />
                <ValidationMessage For="@(() => InputOutputProp.WhereHouse)" />
            </Template>
        </DxFormLayoutItem>
        <DxFormLayoutItem Field="@nameof(InputOutputEntity.InOutDate)" Caption="Fecha:" ColSpanMd="6">
            <Template>
                <DxDateEdit ReadOnly="true" T="DateTime" @bind-Date="@InputOutputProp.InOutDate" />
            </Template>
        </DxFormLayoutItem>
        <DxFormLayoutItem ColSpanMd="12">
            <Template>
                <ValidationSummary />
            </Template>
        </DxFormLayoutItem>
    </DxFormLayout>
</EditForm>

@code {
    [Parameter]
    public InputOutputEntity InputOutputProp { get; set; }

    List<ProductEntity> products = new List<ProductEntity>();
    List<WhereHouseEntity> whereHouses = new List<WhereHouseEntity>();


    protected override async Task OnInitializedAsync()
    {
        InputOutputProp.InOutDate = DateTime.Now;
        if (InputOutputProp == null)
        {
            InputOutputProp = new InputOutputEntity();
        }
        products = ProductService.ProductList();
        whereHouses = WhereHouseService.WhereHouseList();
    }
}
