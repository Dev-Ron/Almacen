@using Entities
@using Bussiness
@using DevExpress.Blazor
@using Newtonsoft.Json

    <DxDataGrid T="@CategoryEntity" Data="@categories" ShowFilterRow=true @ref="DataGridProducts"

                RowUpdating=@((row, newValues) => OnRowUpdating(row as CategoryEntity, newValues))
                RowInserting=@((row) => OnRowInserting(row))
                RowRemoving="@((row) => Delete(row as CategoryEntity))">
                
        <DxDataGridCommandColumn Width="20%"></DxDataGridCommandColumn>
        <DxDataGridColumn Caption="Nombre" Field="@nameof(CategoryEntity.Name)"> </DxDataGridColumn>
    </DxDataGrid>



@code {
    List<CategoryEntity> categories = new List<CategoryEntity>();
    DxDataGrid<CategoryEntity> DataGridProducts;
    protected override async Task OnInitializedAsync()
    {
        categories = B_Category.CategoryList();
    }

    async void OnRowUpdating(CategoryEntity dataItem, Dictionary<string, object> newValue) {
        string values = JsonConvert.SerializeObject(newValue);
        JsonConvert.PopulateObject(values, dataItem);
        B_Category.UpdateCategory(dataItem);
    }


    async void OnRowInserting(Dictionary<string, object> newValue) {
        CategoryEntity categoryEntitynew = new CategoryEntity();

        string values = JsonConvert.SerializeObject(newValue);
        JsonConvert.PopulateObject(values, categoryEntitynew);
        B_Category.CreateCategory(categoryEntitynew);
        
    }


    async void Delete(CategoryEntity item) {
        if (item != null) {
            B_Category.DeleteCategory(item);
        }
    }
}